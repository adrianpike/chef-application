#!/bin/bash
### BEGIN INIT INFO
# Provides:          unicorns for <%=@app['id']%>
# Required-Start:    $all
# Required-Stop:     $network $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the <%=@app['id']%> unicorns at boot
# Description:       Enable <%=@app['id']%> at boot time.
### END INIT INFO

# Load up RVM
<% if @app['rvm_environment'] then %>
if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
	source "$HOME/.rvm/scripts/rvm"
elif [[ -s "/usr/local/rvm/scripts/rvm" ]] ; then
  source "/usr/local/rvm/scripts/rvm"
else
	printf "No RVM discovered, but we have an environment specified!"
fi

rvm use <%=@app['rvm_environment']%>
<% end %>

set -u
set -e

PID="<%= @app['deploy_to'] %>/shared/pids/unicorn.pid"
old_pid="$PID.oldbin"

CMD="exec chpst -u <%= @app["owner"] %>:<%= @app["group"] %> <%= @smells_like_rack ? 'unicorn' : 'unicorn_rails' %> -E <%= @rails_env %> -c /etc/unicorn/<%= @app['id'] %>.rb"

sig () {
	test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
	test -s $old_pid && kill -$1 `cat $old_pid`
}

case ${1-help} in
start)
	sig 0 && echo >&2 "Already running" && exit 0
	$CMD
	;;
stop)
	sig QUIT && exit 0
	echo >&2 "Not running"
	;;
force-stop)
	sig TERM && exit 0
	echo >&2 "Not running"
	;;
restart|reload)
	sig HUP && echo reloaded OK && exit 0
	echo >&2 "Couldn't reload, starting '$CMD' instead"
	$CMD
	;;
upgrade)
	sig USR2 && exit 0
	echo >&2 "Couldn't upgrade, starting '$CMD' instead"
	$CMD
	;;
rotate)
	sig USR1 && echo rotated logs OK && exit 0
	echo >&2 "Couldn't rotate logs" && exit 1
	;;
*)
 	echo >&2 "Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"
 	exit 1
 	;;
esac